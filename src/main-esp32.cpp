#include "Arduino.h"
#include "config.h"
#include "reports.h"
#include "water_pump.h"
#include "tele_bot.h"
#include "web_server.h"
#include "handleWifi.h"
#include "dht11.h"
#include "soilmoisture.h"
#include "gemini.h"
#include "google_sheets_service.h"

const long gmtOffset_sec = 7 * 3600; // UTC+7
const int daylightOffset_sec = 0;
const char* ntpServer = "pool.ntp.org";

const unsigned long SEND_DATA_INTERVAL = 5 * 60 * 1000;
unsigned long lastSendTime = 0;

void setup() {
  Serial.begin(115200);
  
  // Kh·ªüi t·∫°o c·∫£m bi·∫øn DHT
  dht11Setup();

  // Configure sensor pins and control
  soilMoistureSetup();
  waterPumpSetup();
  
  connectToWifi();
  
  telegramBotSetup();
  
  webServerSetup();
  
  // C·∫•u h√¨nh th·ªùi gian t·ª´ NTP server
  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);
  
  // ƒê·ª£i ƒë·ªìng b·ªô th·ªùi gian
  struct tm timeinfo;
  if (!getLocalTime(&timeinfo)) {
    Serial.println("L·ªói l·∫•y th·ªùi gian t·ª´ Internet!");
  } else {
    Serial.println("ƒê√£ ƒë·ªìng b·ªô th·ªùi gian: " + String(timeinfo.tm_hour) + ":" + 
                  String(timeinfo.tm_min) + ":" + String(timeinfo.tm_sec));
  }
  
  sendDataToGoogleSheets();

  getWeatherAndAskGemini();
  
  // Th√¥ng b√°o h·ªá th·ªëng ƒë√£ s·∫µn s√†ng
  String startupMsg = "üöÄ *H·ªÜ TH·ªêNG ƒê√É KH·ªûI ƒê·ªòNG* üöÄ\n\n";
  startupMsg += "‚úÖ K·∫øt n·ªëi WiFi th√†nh c√¥ng\n";
  startupMsg += "‚úÖ ƒê·ªìng b·ªô th·ªùi gian th√†nh c√¥ng\n";
  startupMsg += "‚úÖ G·ª≠i d·ªØ li·ªáu l√™n Google Sheets ƒë√£ s·∫µn s√†ng\n";
  startupMsg += "‚úÖ D·ª± b√°o th·ªùi ti·∫øt v√† ph√¢n t√≠ch ƒë√£ ho·∫°t ƒë·ªông\n\n";
  startupMsg += "H·ªá th·ªëng s·∫Ω t·ª± ƒë·ªông g·ª≠i d·ªØ li·ªáu m·ªói 5 ph√∫t v√† b√°o c√°o h√†ng ng√†y l√∫c 23:00.";
  
  sendToAllChannels(startupMsg, "Markdown");
}


void loop() {
  server.handleClient();
  
  checkAndWater();
  
  checkAndStopPump();
  
  unsigned long currentMillis = millis();
  
  // Add sensor reading every 5 seconds
  static unsigned long lastSensorReadTime = 0;
  if (currentMillis - lastSensorReadTime >= 5000) {
    lastSensorReadTime = currentMillis;
    
    // Read sensor data
    float temperature = dht.readTemperature();
    float humidity = dht.readHumidity();
    int soilMoistureValue = analogRead(SOIL_MOISTURE_PIN);
    float soilMoisturePercent = map(soilMoistureValue, DRY_SOIL, WET_SOIL, 0, 100);
    soilMoisturePercent = constrain(soilMoisturePercent, 0, 100);
    
    // Update global variables for webserver access
    latestTemperature = temperature;
    latestHumidity = humidity;
    latestSoilMoisturePercent = soilMoisturePercent;
    
    // Print to serial monitor
    Serial.println("===== Sensor Data (5s) =====");
    Serial.print("Temperature: "); 
    Serial.print(temperature); 
    Serial.println(" ¬∞C");
    Serial.print("Humidity: "); 
    Serial.print(humidity); 
    Serial.println(" %");
    Serial.print("Soil Moisture ADC: ");
    Serial.println(soilMoistureValue);
    Serial.print("Soil Moisture: ");
    Serial.print(soilMoisturePercent);
    Serial.println(" %");
    Serial.println("===========================");
  }
  
  if (currentMillis - lastSendTime >= SEND_DATA_INTERVAL) {
    lastSendTime = currentMillis;
    sendDataToGoogleSheets();
  }
  
  // Ki·ªÉm tra xem c√≥ ƒë·∫øn th·ªùi gian g·ª≠i b√°o c√°o h√†ng ng√†y ch∆∞a
  if (isTimeToSendDailyReport()) {
    sendDailyReport();
  }
  
  // Ki·ªÉm tra tin nh·∫Øn Telegram
  messageCheck();
}